<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.dan.mybatis.mapper.MemoInfoMapper">

    <!--<cache type="com.dan.mybatis.plugin.MyCache">-->
    <!--<property name="maxSize" value="512"/>-->
    <!--</cache>-->
    <!--缓存-->
    <cache type="org.mybatis.caches.ehcache.EhcacheCache">
        <property name="timeToIdleSeconds" value="3600"/><!--1 hour-->
        <property name="timeToLiveSeconds" value="3600"/><!--1 hour-->
        <property name="maxEntriesLocalHeap" value="1000"/>
        <property name="maxEntriesLocalDisk" value="10000000"/>
        <property name="memoryStoreEvictionPolicy" value="LRU"/>
    </cache>
     <!--结果集  id结果集的名字 映射到哪个类即是他的类型-->
    <resultMap id="memoInfoMap" type="com.dan.mybatis.entity.MemoInfo">
        <id property="id" column="id"/>
        <result property="groupId" column="group_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="privacy" column="is_protected"/>
        <result property="backGround" column="background"/>
        <result property="remind" column="is_remind"/>
        <result property="remindTime" column="remind_time" jdbcType="TIMESTAMP"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="modifyTime" column="modify_time"
                jdbcType="TIMESTAMP"/>
    </resultMap>
    <!--映射插入语句-->
    <insert id="insertMemoInfo" parameterType="MemoInfo" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
           insert into memo_info
           (group_id,title,content,is_protected,created_time)
          values (#{groupId},#{title},#{content},#{privacy},#{createdTime});
    </insert>


    <!--映射更新语句-->
    <update id="updateMemoInfo" parameterType="com.dan.mybatis.entity.MemoInfo">
         update memo_info
        <set>
               <if test="title!=null">
                     title=#{title},
               </if>
            <if test="content!=null">
                content=#{content},
            </if>
            <if test="privacy!=null">
                is_protected=#{privacy},
            </if>
        </set>
        where id=#{id};
    </update>

    <update id="upDataMemoInfoById" parameterType="MemoInfo">
           update memo_info
           <set>
               <if test="content!=null">
                   content=#{content},
               </if>
               <if test="title">
                   title=#{title},
               </if>
               <if test="privacy!=null">
                   is_protected=#{privacy},
               </if>
           </set>
        where id=#{id}
    </update>

    <delete id="deleteMemoInfo" parameterType="MemoInfo">
        delete from memo_info where id=#{id};
    </delete>


    <!--提取出被其他语句重复调用的块-->
    <sql id="basic_column">
        id,
        group_id,
        title,
        content,
        is_protected,
        is_remind,
        remind_time,
        created_time,
        modify_time
    </sql>
    <!--引用sql语句  分页查询-->
    <select id="queryByPage" resultMap="memoInfoMap">
        select
        <include refid="basic_column"/>
        from memo_info
        order by ${columnName}
        limit #{pageSize} offset #{pageOffset}
    </select>

    <select id="queryByPageWithObject" parameterType="com.dan.mybatis.common.Page" resultMap="memoInfoMap">
        select
        <include refid="basic_column"/>
        from memo_info
        order by ${orderColumnName}
        limit #{pageSize} offset #{pageOffset}
    </select>

    <select id="QueryMemoInfoById"  resultMap="memoInfoMap" >
        select <include refid="basic_column"/> from memo_info
        where id=#{id};
    </select>

    <!--<select id="QueryMemoInfoByGroupId" resultMap="memoInfoMap">-->
           <!--select <include refid="basic_column"/> from memo_info where group_id=#{groupId};-->
    <!--</select>-->
    <select id="QueryMemoInfoByGroupId" resultType="MemoInfo">
        select
        id as "id",
        title as "title",
        content as "content",
        group_id as "groupId",
        backgroup as "backGround",
        created_time as "createdTime",
        modify_time as "mpdifyTime"
        from memo_info where group_id=#{groupId};
    </select>
    <!--查询便签信息，根据标题，内容，创建时间   且的关系-->
    <select id="queryMemoInfoByTitle" resultMap="memoInfoMap">
        select
        <include refid="basic_column"/>
        from memo_info where
        <if test="title!=null">
           title=#{title}
        </if>
        <if test="content!=null">
            and content=#{content}
        </if>
    </select>
    <select id="queryMemoInfoByprivacyOrRemind" resultMap="memoInfoMap" parameterType="MemoInfo" >
           select
           <include refid="basic_column"/>
        from memo_info
        where
        <choose>
            <when test="privacy!=null">
                is_protected=#{privacy}
            </when>
            <when test="remind!=null">
                is_remind=#{remind}
            </when>
        </choose>
    </select>

    <select id="queryMemoInfoByGroupId" resultMap="memoInfoMap" parameterType="arraylist">
        select
        <include refid="basic_column"/>
        from memo_info where id in 
        <foreach collection="array" index="index" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </select>
    <select id="QueryMemoInfpByPage" resultMap="memoInfoMap">
        select
        <include refid="basic_column"/>
        from memo_info
    </select>
    <select id="QueryMemoInfoByPageWithOffsetOf" resultMap="memoInfoMap">
            select  <include refid="basic_column"/>
                from memo_info
    </select>
    <select id="queryMemoInfoByList" resultMap="memoInfoMap" parameterType="list">
                select <include refid="basic_column"/>
                    from memo_info where id in 
                     <foreach collection="list" item="item" separator="," close=")" open="(" index="index">
                         #{item}
                     </foreach>
    </select>
    <select id="queryMempInfoByMap" resultMap="memoInfoMap" parameterType="map">
          select <include refid="basic_column"/>
           from memo_info where id in 
        <foreach collection="ids" index="index" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </select>

</mapper>